<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>


<AnchorPane prefHeight="565.0" prefWidth="610.0" stylesheets="@releaseNotes.css" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.octavegui.octavegui.ReleaseNotes">
   <children>
      <TextArea layoutX="154.0" layoutY="109.0" prefHeight="200.0" prefWidth="200.0" styleClass="listViewFunctionIndex" text="Summary of important user-visible changes for version 8 (2023-03-07):&#10;--------------------------------------------------------------------&#10;&#10;### General improvements&#10;&#10;- Octave's libraries are now built using symbol visibility by default.&#10;  That means that fewer symbols are exported from these libraries.&#10;  Configure with `--disable-lib-visibility-flags` to export all symbols&#10;  (as in previous versions).&#10;&#10;- `filter` is now 5X faster, which also speeds up `deconv`, `fftfilt`&#10;  and `arma_rnd` by the same amount.&#10;&#10;- `integral` can now output a second argument passing the error&#10;  measurement used by the underlying integrator.&#10;&#10;- `perms` now accepts a second argument &quot;unique&quot; to return only unique&#10;  permutations for inputs with repeated elements.  It is faster and&#10;  takes less memory to call `perms ('aaaabbbbcccc', &quot;unique&quot;)` than to&#10;  call `unique (perms ('aaaabbbbcccc'), &quot;rows&quot;)`.&#10;&#10;- `quadgk` can now accept the `ArrayValued` input parameter to handle&#10;  array-valued input functions.&#10;&#10;- `delaunayn` now has consistent trivial simplex checking and removal&#10;  for all input dimensions, simplex checking 3D inputs is now&#10;  vectorized, and &gt;3D simplex checking performance has been improved.&#10;  Simplexes points are now ordered so they will all have positive&#10;  outward normal vectors.  Input type checking has also been added for&#10;  improved error handling.&#10;&#10;- `factor` now factorizes all 64-bit integers in roughly the same time.&#10;  Previously, the product of two large primes took much longer to factorize&#10;  than highly composite inputs.&#10;&#10;- `Refine` option is now implemented in functions `ode45`, `ode23`,&#10;  and `ode23s`.&#10;&#10;- Octave is now compatible with PCRE2 (UTF-8).  PCRE2 is preferred over PCRE&#10;  if both are installed.  Configure with `--without-pcre2` if you prefer Octave&#10;  to use PCRE in this case.&#10;  &#10;- `mean` now internally processes data as type double to reduce liklihood of&#10;hitting overflow or precision limits with other types (bug #63848).&#10;&#10;### Graphical User Interface&#10;&#10;- The GUI has a dark style and several new icons in toolbars for better&#10;  visibility and higher contrast.&#10;&#10;- A new terminal widget has been added for the GUI.  It is still experimental&#10;  and is disabled by default.  It can be enabled with the command line&#10;  parameter `--experimental-terminal-widget`.&#10;&#10;- More fonts for the documentation browser are included.&#10;&#10;### Graphics backend&#10;&#10;- When printing, the option `-svgconvert` is now the default.  If you want to&#10;use the more limited EPS-based tool chain (the former default)—e.g., if&#10;you encounter inaccurate image rendering—you can pass the `-nosvgconvert`&#10;option to the `print` function.&#10;&#10;- Additional properties have been added to the `figure` graphics object:&#10;    * `&quot;innerposition&quot;` (equivalent to `&quot;position&quot;`)&#10;    * `&quot;windowstate&quot;` (not yet implemented)&#10;&#10;- Legend now features a new property `&quot;itemhitfcn&quot;`, allowing the&#10;  execution of a callback function when a legend item is clicked.&#10;&#10;### Matlab compatibility&#10;&#10;- `inline` functions now support all Matlab methods.  The performance&#10;  of `inline` functions has also been improved.&#10;&#10;- `sub2ind` now supports index values outside of the size specified by&#10;  the subscripts.&#10;&#10;- `cylinder` now accepts a scalar for the radius argument.&#10;&#10;- `clock` now has an optional second output `ISDST` which indicates if&#10;  Daylight Savings Time is in effect for the system's time zone.&#10;&#10;- `print` now accepts option `-image` to specify the &quot;opengl&quot; renderer&#10;  and `-vector` to specify the &quot;painters&quot; renderer.&#10;&#10;- `format` now accepts the option &quot;default&quot;, which is equivalent to&#10;  calling `format` without any options to reset the default state.&#10;&#10;- `quadgk` now stops iterating when `error &lt;= tolerance` while the previous&#10;  condition was `error &lt; tolerance`.&#10;&#10;- `mean` now accepts vector dimensions and options to handle `NaN` values.&#10;  The option `&quot;a&quot;` (arithmetic mean), `&quot;g&quot;` (geometric mean), and `&quot;h&quot;`&#10;  (harmonic mean) are no longer accepted, only the arithmetic mean is computed.&#10;  For the geometric and harmonic mean, please use respective functions&#10;  `geomean` and `harmmean` from the Octave Statistics package.&#10;&#10;- `var` and `std` now optionally output a second argument containing the mean&#10;  or weighted mean.&#10;&#10;- `integral` can now accept the 'ArrayValued' option in combination with&#10;  'RelTol' and 'WayPoints'.&#10;&#10;- File system operations that remove files (e.g., `unlink` or `rmdir`) now also&#10;  remove files that have their read-only file attribute set on Windows.&#10;&#10;- The default state for certain graphics properties has been made&#10;  consistent with Matlab.&#10;&#10;        Object      | Property         | Default State&#10;        ------------|------------------|------------&#10;        figure      | &quot;dockcontrols&quot;   | &quot;on&quot;&#10;&#10;- `ode45`, `ode23`, and `ode23s` have improved results for options `Events`,&#10;  `OutputFcn`, and `Refine`, along with corrected orientation of struct&#10;  outputs.&#10;&#10;- *Early notice of future breaking changes*:  Due to many user requests that&#10;  Octave should have a Matlab-compatible string class, there is work under way&#10;  to implement a string class that will differ from a vector of characters.  In&#10;  Octave, single-quoted character arrays are currently compatible with Matlab,&#10;  but double-quoted forms are not.  Currently in Octave, both 'foo' and &quot;foo&quot;&#10;  are largely interchangeable, barring certain escape sequence interpretations&#10;  such as &quot;\n&quot; (converted to a single newline character) as opposed to '\n'&#10;  (two separate characters).  Matlabâ€™s single-quoted character arrays and&#10;  double-quoted strings do not process backslash escape sequences, unlike many&#10;  other languages, and those escape sequences are instead processed by&#10;  individual functions such as `fprintf`.&#10;&#10;  Octave's behavior is likely to change in future as a consequence of&#10;  implementing Matlab-style string syntax.  For example, 'foo' will remain a&#10;  three-element character vector, but &quot;foo&quot; will become a single-element string&#10;  object.  Some backslash escape sequences are likely to differ from their&#10;  current Octave behavior, but will achieve greater Matlab compatibility.  The&#10;  exact implementation is a work in progress, and may or may not include&#10;  methods of preserving backward compatibility.&#10;&#10;  *What this means for user code*: If your code currently relies on&#10;  double-quoted strings (e.g., &quot;foo&quot;) representing character vectors as&#10;  opposed to string objects, and if you intend to update to a future version of&#10;  Octave incorporating the above changes, then consider replacing all&#10;  double-quoted strings with single-quoted strings in your code over time&#10;  (e.g., replace &quot;foo&quot; with 'foo'). Single-quoted strings are expected to&#10;  retain current behavior.  Further, if your code relies on backslash escape&#10;  sequence interpretation in double-quoted strings (except for special cases&#10;  like the `printf` family), that code may need to change as well.&#10;&#10;### Alphabetical list of new functions added in Octave 8&#10;&#10;* `clearAllMemoizedCaches`&#10;* `matlab.lang.MemoizedFunction`&#10;* `memoize`&#10;* `normalize`&#10;* `pagectranspose`&#10;* `pagetranspose`&#10;* `uifigure`&#10;&#10;### Deprecated functions, properties, and operators&#10;&#10;The following functions and properties have been deprecated in Octave 8&#10;and will be removed from Octave 10 (or whatever version is the second&#10;major release after 8):&#10;&#10;- Functions&#10;&#10;        Function               | Replacement&#10;        -----------------------|------------------&#10;        shift                  | circshift&#10;        sparse_auto_mutate     | none (see below)&#10;&#10;- The `sparse_auto_mutate` function no longer has any effect on Octave's&#10;  behavior.  Previously, after calling `sparse_auto_mutate (true)`,&#10;  Octave would automatically convert sparse matrices to full when a&#10;  sparse matrix required more memory than simply using full matrix&#10;  storage.  This setting was `false` by default for compatibility with&#10;  Matlab.  Now you must manually convert to full storage when desired.&#10;&#10;- Properties&#10;&#10;  The following property names are discouraged, but there is no fixed&#10;  date for their removal.&#10;&#10;        Object           | Property    | Replacement&#10;        -----------------|-------------|------------&#10;        uimenu           | label       | text&#10;        uimenu           | callback    | menuselectedfcn&#10;&#10;The following functions were deprecated in Octave 6 and have been removed&#10;from Octave 8.&#10;&#10;- Functions&#10;&#10;        Function     | Replacement&#10;        -------------|------------&#10;        runtests     | oruntests&#10;&#10;- The environment variable used by `mkoctfile` for linker flags is now&#10;  `LDFLAGS` rather than `LFLAGS`.  `LFLAGS` was deprecated in Octave 6,&#10;  and will be removed in a future version of Octave.&#10;&#10;Summary of bugs fixed for version 8.1.0 (2023-01-22):&#10;----------------------------------------------------&#10;&#10;- Improved input validation and/or output handling for `poly`, `pinv`, `patch`,&#10;  `fill`, `fill3`, `qp`, `datevec`, `textscan`, `sub2ind`, `qr`, `airy`,&#10;  `regexp`, `dec2bin`, `dec2hex`, `mean`, and many others.&#10;- Improved performance for `complex`, `fftw`, `delaunayn`, `isfield`, `tsearch`,&#10;  sparse matrix exponentiation, other sparse operations, and many others.&#10;- Overhauled `@audiorecorder` and `@audioplayer` classes.&#10;&#10;### Old release news&#10;&#10;- [Octave 7.x](etc/NEWS.7)&#10;- [Octave 6.x](etc/NEWS.6)&#10;- [Octave 5.x](etc/NEWS.5)&#10;- [Octave 4.x](etc/NEWS.4)&#10;- [Octave 3.x](etc/NEWS.3)&#10;- [Octave 2.x](etc/NEWS.2)&#10;- [Octave 1.x](etc/NEWS.1)" AnchorPane.bottomAnchor="10.0" AnchorPane.leftAnchor="10.0" AnchorPane.rightAnchor="10.0" AnchorPane.topAnchor="10.0">
         <font>
            <Font name="Consolas" size="9.0" />
         </font>
      </TextArea>
   </children>
</AnchorPane>
